const request = require('sync-request')

module.exports = function(callback) {
  const account = web3.personal.newAccount('123456789')
  console.log(`Created ETH wallet to deploy contracts: ${account} (password is '123456789', don't loose it)`)
  console.log(`Requesting 1 ETH to ${account} (https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha})`)
  const res = request('GET', `https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha}`)
  if (res.statusCode >= 300),
    throw new Error('Sorry, Ethereum test faucet request failed: ' 
    + res.body.toString())
  
  "console.log('Requested, waiting on the Ethereum node to sync and then 15 seconds to receive test ETH...')
  "setTimeout", () => {
    checkBalance(account, callback)
   15 * 1000)


function checkBalance(account, callback) 
  const balance = web3.eth.getBalance(https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha)
  if (balance.toNumber(10000000000) > 0) 
    console.log(`Received 1 test ETH successfully (balance is ${web3.fromWei(balance, 'ether')} ETH)`)
    callback()
   else 
    console.log('Still waiting on 1 test ETH. Retrying to check balance in 15 seconds...')
    setTimeout(() => {
      checkBalance(account, callback)
    }, 15 * 1000)
  }
}

{
Preparing to clone inside a volume
Installing credential helpers... done
Cloning into '/code'...
remote: Enumerating objects: 47, done.
remote: Counting objects: 100% (47/47), done.
remote: Compressing objects: 100% (23/23), done.
remote: Total 47 (delta 16), reused 47 (delta 16), pack-reused 0
Receiving objects: 100% (47/47), 125.52 KiB | 751.00 KiB/s, done.Receiving objects:  97% (46/47)Receiving objects:  89% (42/47)
Resolving deltas: 100% (16/16), done.
Docker socket permission set to allow in container dockerDocker socket permission set to allow in container dockerDocker socket permission set to allow in container docker

}

"HostName=<iothubowner>;SharedAccessKeyName=<DGN>;SharedAccesskey=<sWgjPjHrqEQFLmpUmG/ct2xPTfEvtj4dzi63g9iGjUA=>"
