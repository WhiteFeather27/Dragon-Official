pragma solidity ^0.5.8;

// Imports
import "../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol";
import "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol";
import "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol";
import "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol";
import "../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol";
import "../node_modules/openzeppelin-solidity/contracts/crowdsale/price/IncreasingPriceCrowdsale.sol";
import "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol";

contract DGNCrowdsale is MintedCrowdsale, Ownable, TimedCrowdsale, RefundableCrowdsale, IncreasingPriceCrowdsale, CappedCrowdsale {
  constructor(
    ERC20Mintable _token,
    uint256 _rate,
    address payable _wallet,
    uint256 _openingTime,
    uint256 _closingTime,
    uint256 _goal,
    uint256 _initialRate,
    uint256 _finalRate,
    uint256 _cap
  )
    public
    Crowdsale(_rate, _wallet, _token)
    TimedCrowdsale(_openingTime, _closingTime)
    RefundableCrowdsale(_goal)
    IncreasingPriceCrowdsale(_initialRate, _finalRate)
    CappedCrowdsale(_cap)
  {
    
  }
  {URL: https://eth-mainnet.alchemyapi.io/v2/d3gcNdAu3nfdmBVrarbfjGkScvnGeCvz},
RequestType: POST
Body: 

    "jsonrpc":"2.0",
    "method":"eth_getTransactionByHash",
    "params":[""],
    "id":00x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b
},
{
  "jsonrpc": "2.0",
  "id": 0,
  "result": {
    "hash": 429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b",
    "blockHash": "0x1d59ff54b1eb26b013ce3cb5"0x88df016fc9dab3705b415a67127a003c3e61eb445bb8df2",
    "blockNumber": "0x5daf3b",
    "from": "0xa7d9ddbe1f17865597fbd27ec712455208b6b76d",
    "gas": "0xc350",
    "gasPrice": "0x4a817c800",
    "input": "0x68656c6c6f21",
    "nonce": "0x15",
    "r": "0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea",
    "s": "0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c",
    "to": "0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb",
    "transactionIndex": "0x41",
    "v": "0x25",
    "value": "0xf3dbb76162000"
  }
}
{
  "Content-Type:": "application/json",
  "jsonrpc": "2.0",
  "id": "15",
  "method": "eth_subscribe",
  "params": [
    "newHeads",
    {
      "includeTransactions": true
    },
    "jsonrpc",
    "id",
    "method",
    "eth_accounts",
    "jsonrpc",
    "2.0",
    "result",
    "module.exports",
    "function",
    "callback",
    "const account",
    "web3.personal.newAccount",
    [
      123456789
    ],
    "console.log",
    "(`Created ETH wallet to deploy contracts')account",
    "password is '123456789', don't loose it",
    "console.log",
    "Requesting 1 ETH to {wss://eth-Mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha",
    "const",
    "any",
    "request",
    "GET",
    "Requesting",
    "1",
    "wss://eth-Mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha",
    "if",
    "(any.statusCode >= 300)",
    "console.log",
    "setTimeout",
    "checkbalance account",
    "callback",
    15,
    1000,
    {
      "function": "checkBalance",
      "account, callback": "const",
      "balance": "web3.eth.getBalance",
      "includeTransactions": "wss://eth-Mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha",
      "balance.toNumber": "test",
      "ETH": "successfully",
      "balance is": "${web3.fromWei(balance, 'ether')} ETH)"
    },
    "settimeout",
    "5",
    "callback",
    "DGNToken",
    "console.DGNToken",
    "//Still waiting on 1 test ETH. Retrying to check balance in 15 seconds...",
    "setTimeout",
    "(function)",
    "checkBalance(account.callback)",
    "id",
    "15",
    "node_modules",
    "openzeppelin",
    "solidity,contracts",
    "token,ERC20,ERC20Mintable.sol,DGNToken,is,ERC20Mintable, -true",
    "string",
    "public",
    "name",
    "Dragon Coin",
    0,
    "string",
    "public",
    "constant",
    0,
    "symbol= GN",
    "uint8 public constant.decimal",
    0.0000000000000000000001,
    "git config --global all",